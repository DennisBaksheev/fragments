name: cd

on:
  push:
    tags:
      - 'v*'

jobs:
  aws:
    name: AWS
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS Credentials using Secrets
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPO: fragments
          VERSION_TAG: ${{ github.ref_name }}
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ env.VERSION_TAG }}, ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:latest
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: update-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: fragments-definition.json
          container-name: fragments
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ env.VERSION_TAG }}
          environment-variables: |
            LOG_LEVEL=info
    NODE_ENV=production
    AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}
    AWS_REGION=us-east-1
    AWS_COGNITO_POOL_ID=us-east-1_3aBCMHcjR
    API_URL=http://localhost:8080
    PORT=8080
    OAUTH_SIGN_IN_REDIRECT_URL=http://localhost:1234
    AWS_COGNITO_HOSTED_UI_DOMAIN=https://dbaksheev-fragments.auth.us-east-1.amazoncognito.com
    HTPASSWD_FILE=tests/.htpasswd
    OAUTH_SIGN_OUT_REDIRECT_URL=http://localhost:1234
    AWS_COGNITO_CLIENT_ID=4ks4gopjl273115is1rh76r5bi
    AWS_S3_BUCKET_NAME=dbaksheev-fragments
    AWS_S3_ENDPOINT_URL=http://localstack:4566
    AWS_DYNAMODB_ENDPOINT_URL=http://dynamodb-local:8000
    AWS_DYNAMODB_TABLE_NAME=fragments

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-task-def.outputs.task-definition }}
          cluster: fragmentscluster
          service: fragments-service
          wait-for-service-stability: true
